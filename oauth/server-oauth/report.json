{
  "stats": {
    "suites": 3,
    "tests": 6,
    "passes": 0,
    "pending": 0,
    "failures": 6,
    "start": "2022-04-19T11:00:44.234Z",
    "end": "2022-04-19T11:00:52.249Z",
    "duration": 8015
  },
  "tests": [
    {
      "title": "should get clientID through dotenv",
      "fullTitle": ".env should get clientID through dotenv",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to exist",
        "showDiff": false,
        "operator": "strictEqual",
        "stack": "AssertionError: expected undefined to exist\n    at Context.<anonymous> (__tests__/server.test.js:29:24)\n    at processImmediate (internal/timers.js:464:21)"
      }
    },
    {
      "title": "should get clientSecret through dotenv",
      "fullTitle": ".env should get clientSecret through dotenv",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to exist",
        "showDiff": false,
        "operator": "strictEqual",
        "stack": "AssertionError: expected undefined to exist\n    at Context.<anonymous> (__tests__/server.test.js:33:28)\n    at processImmediate (internal/timers.js:464:21)"
      }
    },
    {
      "title": "authorization callback에 대한 handler에서는 GitHub access token 요청을 처리할 수 있어야 합니다.",
      "fullTitle": "controller/callback.js authorization callback에 대한 handler에서는 GitHub access token 요청을 처리할 수 있어야 합니다.",
      "duration": 2003,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    },
    {
      "title": "access token을 받아온 후에는, 클라이언트에 응답으로 전달해줘야 합니다.",
      "fullTitle": "controller/callback.js access token을 받아온 후에는, 클라이언트에 응답으로 전달해줘야 합니다.",
      "duration": 2001,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    },
    {
      "title": "access token이 주어지지 않는 경우 접근 권한을 제한해야 합니다.",
      "fullTitle": "controller/images.js access token이 주어지지 않는 경우 접근 권한을 제한해야 합니다.",
      "duration": 2002,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    },
    {
      "title": "access token이 주어지는 경우 접근 권한을 부여해야 합니다.",
      "fullTitle": "controller/images.js access token이 주어지는 경우 접근 권한을 부여해야 합니다.",
      "duration": 2000,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "should get clientID through dotenv",
      "fullTitle": ".env should get clientID through dotenv",
      "duration": 3,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to exist",
        "showDiff": false,
        "operator": "strictEqual",
        "stack": "AssertionError: expected undefined to exist\n    at Context.<anonymous> (__tests__/server.test.js:29:24)\n    at processImmediate (internal/timers.js:464:21)"
      }
    },
    {
      "title": "should get clientSecret through dotenv",
      "fullTitle": ".env should get clientSecret through dotenv",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "expected undefined to exist",
        "showDiff": false,
        "operator": "strictEqual",
        "stack": "AssertionError: expected undefined to exist\n    at Context.<anonymous> (__tests__/server.test.js:33:28)\n    at processImmediate (internal/timers.js:464:21)"
      }
    },
    {
      "title": "authorization callback에 대한 handler에서는 GitHub access token 요청을 처리할 수 있어야 합니다.",
      "fullTitle": "controller/callback.js authorization callback에 대한 handler에서는 GitHub access token 요청을 처리할 수 있어야 합니다.",
      "duration": 2003,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    },
    {
      "title": "access token을 받아온 후에는, 클라이언트에 응답으로 전달해줘야 합니다.",
      "fullTitle": "controller/callback.js access token을 받아온 후에는, 클라이언트에 응답으로 전달해줘야 합니다.",
      "duration": 2001,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    },
    {
      "title": "access token이 주어지지 않는 경우 접근 권한을 제한해야 합니다.",
      "fullTitle": "controller/images.js access token이 주어지지 않는 경우 접근 권한을 제한해야 합니다.",
      "duration": 2002,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    },
    {
      "title": "access token이 주어지는 경우 접근 권한을 부여해야 합니다.",
      "fullTitle": "controller/images.js access token이 주어지는 경우 접근 권한을 부여해야 합니다.",
      "duration": 2000,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)\n    at listOnTimeout (internal/timers.js:557:17)\n    at processTimers (internal/timers.js:500:7)",
        "message": "Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js)",
        "code": "ERR_MOCHA_TIMEOUT",
        "timeout": 2000,
        "file": "/Users/hongmartin/Codestate/source-sprint_v2/im-sprint-auth-oauth/server-oauth/__tests__/server.test.js"
      }
    }
  ],
  "passes": []
}